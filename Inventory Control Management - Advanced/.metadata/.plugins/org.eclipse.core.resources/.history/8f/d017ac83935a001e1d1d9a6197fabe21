import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;

public class InventoryControlManagerGUI extends JFrame {
    private static final String HOST = "localhost";
    private static final String USER = "root";
    private static final String PASS = "Qwerty#80085";

    private Connection connection;

    private JTextField usernameField;
    private JPasswordField passwordField;
    private JButton loginButton;
    private JTextArea productListArea;

    public InventoryControlManagerGUI() {
        setTitle("Inventory Control Manager");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JPanel loginPanel = new JPanel(new GridLayout(3, 2));
        JLabel usernameLabel = new JLabel("Username:");
        JLabel passwordLabel = new JLabel("Password:");
        usernameField = new JTextField();
        passwordField = new JPasswordField();
        loginButton = new JButton("Login");

        loginPanel.add(usernameLabel);
        loginPanel.add(usernameField);
        loginPanel.add(passwordLabel);
        loginPanel.add(passwordField);
        loginPanel.add(new JLabel()); // Empty label for spacing
        loginPanel.add(loginButton);

        productListArea = new JTextArea();
        productListArea.setEditable(false);

        add(loginPanel, BorderLayout.NORTH);
        add(new JScrollPane(productListArea), BorderLayout.CENTER);

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());

                if (authenticateUser(username, password)) {
                    displayProductList();
                } else {
                    JOptionPane.showMessageDialog(InventoryControlManagerGUI.this, "Access denied.");
                }
            }
        });

        // Initialize the database connection
        connection = createConnection();
        if (connection == null) {
            JOptionPane.showMessageDialog(this, "Database connection failed. Exiting.");
            System.exit(1);
        }
    }

    private Connection createConnection() {
        Connection connection = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection("jdbc:mysql://" + HOST + ":3306/PROJECT1", USER, PASS);
        } catch (ClassNotFoundException | SQLException e) {
            System.err.println("ERROR: " + e.getMessage());
        }
        return connection;
    }

    private boolean authenticateUser(String username, String password) {
        String query = "SELECT userid FROM user WHERE userid = ? AND passcode = ?";
        try (PreparedStatement stmt = connection.prepareStatement(query)) {
            stmt.setString(1, username);
            stmt.setString(2, password);
            ResultSet resultSet = stmt.executeQuery();
            return resultSet.next();
        } catch (SQLException e) {
            System.err.println("ERROR: " + e.getMessage());
        }
        return false;
    }

    private void displayProductList() {
        productListArea.setText("");
        String queryAllProducts = "SELECT * FROM products";
        try (Statement stmt = connection.createStatement();
             ResultSet resultSet = stmt.executeQuery(queryAllProducts)) {
            while (resultSet.next()) {
                productListArea.append("Product ID: " + resultSet.getInt("productid") + " | Product Name: " +
                        resultSet.getString("productname") + " | Quantity: " + resultSet.getInt("quantity") +
                        " | Price: " + resultSet.getInt("price") + " | Seller Name: " + resultSet.getString("seller_name") + "\n");
            }
        } catch (SQLException e) {
            System.err.println("ERROR: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new InventoryControlManagerGUI().setVisible(true);
            }
        });
    }
}
